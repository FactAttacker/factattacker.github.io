{"version":3,"sources":["conponent/subwindow/index.js","conponent/subwindow/subWindow.js","conponent/folder/folder.js","conponent/folder/index.js","conponent/taskbar/taskbar.js","conponent/taskbar/index.js","conents/App.js","actions/actionType.js","redux-actions/Redux-actions.js","redux-actions/index.js","store.js","index.js"],"names":["subWindow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createModal","console","log","index","chosenFolder","react_default","a","createElement","className","target","type","alt","text","src","state","data","folderName","PureComponent","scss","classNames","bind","folderCss","folder","name","imgUrl","open","z_index","handleClickEvt","value","window","openModal","map","key","ind","objectSpread","setState","handleShowFolder","folders","liList","onClick","ulGroup","rowData","arrayList","arrayNum","length","i","push","react","id","element","idx","subwindow","taskbarCss","clockSatus","taskbar","amPm","currentHours","currentMinute","calendar","clockSec","addZeros","num","digit","zero","toString","handleChangeTime","currentDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","currentSeconds","getSeconds","parseInt","setTimeout","setInterval","Number","App","conponent_folder","conponent_taskbar","Component","CHOSEN","createAction","types","handleActions","_handleActions","defineProperty","action","combineReducers","reduxActions","logger","createLogger","createStore","applyMiddleware","ReactDOM","render","es","store","src_conents_App","document","getElementById"],"mappings":"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","file":"static/js/main.f71534d0.chunk.js","sourcesContent":["import subWindow from './subWindow';\r\n\r\nexport default subWindow;","import React, { PureComponent } from 'react';\r\nimport './subWindow.scss';\r\n\r\nexport default class subWindow extends PureComponent {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            data:{\r\n                folderName : true,\r\n            }\r\n        }\r\n    }\r\n\r\n    // static defaultProps ={\r\n    //     chosenFolder : [\r\n    //        {\r\n    //            name:'github'\r\n    //            ,index:0\r\n    //            ,text:'Github'\r\n    //            ,imgUrl:'./image/github.png'\r\n    //            ,open:false\r\n    //            ,z_index : 1\r\n    //         },         \r\n    //     ] \r\n    // }\r\n\r\n    createModal = () => {\r\n        console.log(this.props.index);\r\n        console.log(\"chosenFolder : \", this.props.chosenFolder);\r\n        return (\r\n        <div className=\"modal moving ui-widget-content\" target=\"\" >\r\n                <div className=\"pop_head\">\r\n                    <div className=\"pop_folder_img\">\r\n                        <input type=\"button\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"pop_title\">{ this.props.chosenFolder.text }</div>\r\n                    <div className=\"pop_mng\">\r\n                        <ul>\r\n                            <li>\r\n                                <input type=\"button\" className=\"pop_minsize\"/>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"button\" className=\"pop_maxsize\"/>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"button\" className=\"pop_close\" />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                <nav>\r\n                    <div>\r\n                        <input className=\"pop_navi\" type=\"text\" alt=\"\" />\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"pop_search\" type=\"text\" alt=\"\" />\r\n                    </div>\r\n                </nav>\r\n\r\n                <div className=\"pop_content\">\r\n                    <div className=\"\">\r\n                        <ul>\r\n                            <li></li>\r\n                            <li></li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"jqgrid\">\r\n                    </div>\r\n                    <div className=\"pop_preview\">\r\n                        <img src=\"\" alt=\"미리 볼 파일을 선택하십시오.\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.createModal()}\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n","import React, { PureComponent, Fragment } from 'react'\r\nimport folderCss from './folder.scss';\r\nimport classNames from 'classnames';\r\nimport SubWindow from '../subwindow';\r\n\r\nconst scss = classNames.bind(folderCss);\r\nexport default class folder extends PureComponent {\r\n    \r\n    state ={\r\n        folder : [\r\n            {name:'github'    ,index:0, text:'Github'  ,imgUrl:'./image/github.png',     open: false    ,z_index : 1},\r\n            {name:'user-home' ,index:1, text:'About Me',imgUrl:'./image/user-home.png',  open: false    ,z_index : 1},\r\n            {name:'works'     ,index:2, text:'Works'   ,imgUrl:'./image/computer.png',   open: false    ,z_index : 1},\r\n            {name:'tistory'   ,index:3, text:'Tistory' ,imgUrl:'./image/logomark.svg',   open: false    ,z_index : 1},\r\n            {name:'user-trash',index:4, text:'휴지통'   ,imgUrl:'./image/user-trash.png', open: false    ,z_index : 1},\r\n        ],\r\n    } \r\n\r\n    handleClickEvt = (value,index) => {\r\n        console.log(\" 클릭한 name : \"+value);\r\n        switch (value) {\r\n            case 'tistory':\r\n                console.log(value); \r\n                return window.open('http://backback.tistory.com/');\r\n            case 'github':\r\n                return window.open('https://github.com/FactAttacker?tab=repositories/');    \r\n            default:\r\n                this.openModal(index);\r\n                break;\r\n        }\r\n    }\r\n\r\n    openModal = (index) =>{\r\n        const folder = this.state.folder.map( (key,ind) => {\r\n            if(ind === index)\r\n                return {...key, open:true, z_index:10}\r\n            else\r\n                return {...key, z_index:1}\r\n        });\r\n        console.log(\"chosenFolder : \", folder );\r\n        this.setState({\r\n            folder:folder\r\n        });\r\n    }\r\n\r\n    handleShowFolder = () =>{\r\n        const folders = this.state.folder;\r\n        const liList = (data,index) => {\r\n            return(\r\n                <li key={'folder-list-'+index}>\r\n                    <div className={scss('folder')}\r\n                        onClick={()=>{this.handleClickEvt(data.name,index)}}>\r\n                        <img src={data.imgUrl} alt={data.text}/>\r\n                        <div className={scss('text')}>\r\n                            <span>{data.text}</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        const ulGroup = (rowData,index) =>(\r\n            <ul className=\"folder_row\" \r\n                key={'folder-group-'+index}> {rowData} </ul>\r\n        );\r\n            \r\n        let arrayList = [];\r\n        let rowData   = [];\r\n        let arrayNum  = folders.length;\r\n        for(let i =0 ; arrayNum > i ; i++){\r\n            if( i !==0 && i%3 === 0){ // 행 갯수 \r\n                // console.log(\" folder :\"+ folders[i].name);\r\n                arrayList.push(ulGroup(rowData,i));\r\n                rowData = [];\r\n            }\r\n            rowData.push(liList(folders[i],i)); \r\n            if(arrayNum === (i+1)) arrayList.push(ulGroup(rowData,(i+1)));\r\n        };\r\n        return arrayList;\r\n    }\r\n    \r\n    render(){\r\n        console.log(\"modal state : \", this.state.folder);\r\n        return(\r\n            <Fragment>\r\n                <div id=\"content\">\r\n                    <div className=\"desktop_bg fade\" />\r\n                    <div className=\"desktop\">\r\n                        {this.handleShowFolder()}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.state.folder.map( (element,idx) => {\r\n                        if( element.open ){\r\n                            return <SubWindow key={ 'window-'+idx } chosenFolder={ element }/>\r\n                        }\r\n                        return null;\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n","import folder from './folder.js'\r\n\r\nconsole.log('index.js');\r\nexport default folder;","import React, { PureComponent } from 'react'\r\nimport taskbarCss from './taskbar.scss';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst scss = classNames.bind(taskbarCss);\r\nlet clockSatus = 'FIRST';\r\nexport default class taskbar extends PureComponent{\r\n    \r\n    state = {\r\n          amPm:null,\r\n          currentHours:null,\r\n          currentMinute:null,\r\n          calendar:null,\r\n          clockSec:null,\r\n    }\r\n\r\n    // 자릿수 맞춰주기\r\n    addZeros = (num, digit) => { \r\n        let zero = '';\r\n        num = num.toString();\r\n        if ( num.length < digit ) \r\n            for (let i = 0; i < digit - num.length; i++) \r\n                zero += '0';\r\n        return zero + num;\r\n    }\r\n  \r\n    //setState가 componentDidMount후에 일어나기 때문에 setInterval 시간초를 맞추기 위한 처리\r\n    componentWillMount(){ //getderivedstatefromprops\r\n        this.handleChangeTime();\r\n    }\r\n    componentDidMount(){//최초 실행 한번 실행\r\n        setTimeout(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n    componentDidUpdate(){//1분마다 실행\r\n        setInterval(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n\r\n    handleChangeTime = () => {\r\n        let clockSec =0;\r\n        const currentDate = new Date(); // 현재시간\r\n        let calendar = currentDate.getFullYear() + \"-\" + this.addZeros((currentDate.getMonth()+1), 2) + \"-\" + this.addZeros(currentDate.getDate(),2); // 현재 날짜\r\n        let currentHours   = this.addZeros(currentDate.getHours(),2); \r\n        let currentMinute  = this.addZeros(currentDate.getMinutes(),2);\r\n\r\n        let currentSeconds = this.addZeros(currentDate.getSeconds(),2);\r\n        \r\n        let amPm = '오전'; //초기값 AM\r\n        if(currentHours >= 12){ //시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n            amPm = '오후';\r\n            currentHours = this.addZeros(currentHours - 12,2);\r\n        }\r\n        if(amPm === '오전' && currentHours === 0) currentHours=12;\r\n\r\n        if(clockSatus != null){\r\n            clockSec = 60000 - (currentSeconds * 1000); \r\n            clockSatus = null;\r\n        }else clockSec = 60000;\r\n\r\n        console.log('현재 시간 : '+currentHours+ ' : ' + currentMinute);\r\n        this.setState({\r\n            amPm,\r\n            currentHours,\r\n            currentMinute,\r\n            calendar,\r\n            clockSec:parseInt(clockSec),\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"task_bar\">\r\n                    {/* <!-- 윈도우 시작 버튼 --> */}\r\n                    <input className={scss('start_bnt')} type=\"button\" />\r\n\r\n                    {/* <!-- 스피커 --> */}\r\n                    <input className={scss('sound_on_btn')} type=\"button\" alt=\"사운드\" />\r\n\r\n                    {/* {날짜 시간} */}\r\n                    <div className={scss('date_box')}> \r\n                        <p className={scss('clock')}><span>{this.state.amPm + ' ' + Number(this.state.currentHours) + ':' + this.state.currentMinute }</span></p>\r\n                        <p className={scss('date')}><span>{this.state.calendar}</span></p>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import taskbar from './taskbar';\r\n\r\nexport default taskbar;","import React, { Component } from 'react';\r\nimport Folder from '../conponent/folder';\r\nimport Taskbar from '../conponent/taskbar';\r\nimport './App.scss'; \r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Folder/>\r\n        <Taskbar/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","export const CHOSEN   = 'CHOSEN';","import { handleActions, createAction } from 'redux-actions';\r\nimport * as types from '../actions/actionType';\r\nconst INCREMENT = 'INCREMENT';\r\nconst DECREMENT = 'DECREMENT';\r\n\r\n\r\nconst initialState = {\r\n    folderName : null,\r\n    status : 'NORMAL',\r\n}\r\n\r\nfunction folderActivate(state = initialState, action){\r\n    switch (action.type) {\r\n        case types.CHOSEN:\r\n           return{\r\n                ...state,\r\n                status : ''\r\n           } \r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nexport const increment = createAction(types.CHOSEN);\r\n\r\nexport default handleActions({\r\n    [INCREMENT]: (state, action) => state + 1,\r\n    [DECREMENT]: (state, action) => state - 1\r\n}, 0);\r\n\r\n","import { combineReducers } from 'redux';\r\nimport reduxActions from './Redux-actions';\r\n\r\nexport default combineReducers({\r\n    reduxActions\r\n});\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport reduxActions from './redux-actions';\r\n\r\nconst logger = createLogger();\r\nexport default createStore(reduxActions,applyMiddleware(logger));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './conents/App';\nimport './reset.scss';\n\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}