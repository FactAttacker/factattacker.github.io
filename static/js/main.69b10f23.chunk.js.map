{"version":3,"sources":["actions/actionType.js","actions/index.js","conponent/subwindow/subWindow.js","conponent/subwindow/index.js","conponent/folder/folder.js","conponent/folder/index.js","conponent/taskbar/taskbar.js","conponent/taskbar/index.js","conents/App.js","reducer/index.js","reducer/reducer_folder.js","store.js","index.js"],"names":["FOLDER_OPEN","FOLDER_SELECTED","FOLDER_CLOSE","folderSelected","index","type","types","folderClose","subWindow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMouseDown","e","console","log","coords","x","pageX","y","pageY","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","xDiff","yDiff","setState","state","dragHandler","boolean","draggable","selected","closeYN","close","domContent","name","react_default","a","createElement","className","src","alt","createModal","target","onClick","chosenFolder","onMouseOver","onMouseOut","onMouseDown","onMouseUp","text","PureComponent","connect","dispatch","actions","scss","classNames","bind","folderCss","Folder","handleClickEvt","value","window","open","openModal","folderOpen","handleShowFolder","folders","redux_folder","folder","length","liList","data","key","imgUrl","ulGroup","rowData","arrayList","arrayNum","i","push","react","id","map","element","idx","subwindow","subIndex","taskbarCss","clockSatus","taskbar","amPm","currentHours","currentMinute","calendar","clockSec","addZeros","num","digit","zero","toString","handleChangeTime","currentDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","currentSeconds","getSeconds","parseInt","setTimeout","setInterval","Number","App","_this$props","conponent_folder","conponent_taskbar","root_reducer","z_index","chosen","combineReducers","arguments","undefined","action","objectSpread","logger","createLogger","createStore","reduxActions","applyMiddleware","ReactDOM","render","es","store","src_conents_App","getElementById"],"mappings":"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","file":"static/js/main.69b10f23.chunk.js","sourcesContent":["export const FOLDER_OPEN        = 'FOLDER_OPEN';\r\nexport const FOLDER_SELECTED    = 'FOLDER_SELECTED';\r\nexport const FOLDER_CLOSE       = 'FOLDER_CLOSE';","import * as types from './actionType';\r\n\r\nexport function folderOpen(index){\r\n    return {\r\n        type : types.FOLDER_OPEN,\r\n        index\r\n    }\r\n}\r\n\r\nexport function folderSelected(index){\r\n    return {\r\n        type : types.FOLDER_SELECTED,\r\n        index\r\n    }\r\n}\r\n\r\nexport function folderClose(index){\r\n    return {\r\n        type : types.FOLDER_CLOSE,\r\n        index\r\n    }\r\n}","import React, { PureComponent } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as actions from '../../actions';\r\nimport './subWindow.scss';\r\n\r\nclass subWindow extends PureComponent {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            draggable:false,\r\n            x: 0,\r\n            y: 0\r\n        }\r\n    }\r\n\r\n    // static defaultProps ={\r\n    //     chosenFolder : [\r\n    //        {\r\n    //            name:'github'\r\n    //            ,index:0\r\n    //            ,text:'Github'\r\n    //            ,imgUrl:'./image/github.png'\r\n    //            ,open:false\r\n    //            ,z_index : 1\r\n    //         },         \r\n    //     ] \r\n    // }\r\n\r\n    /**드래그*/\r\n    handleMouseDown = (e) => {\r\n        console.log(\"handleMouseDown : \",e);\r\n        this.coords = {\r\n            x: e.pageX,\r\n            y: e.pageY\r\n        }\r\n        document.addEventListener('mousemove', this.handleMouseMove);\r\n    };\r\n    handleMouseUp = () => {\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        this.coords = {};\r\n    };\r\n    handleMouseMove = (e) => {\r\n        const xDiff = this.coords.x - e.pageX;\r\n        const yDiff = this.coords.y - e.pageY;\r\n        this.coords.x = e.pageX;\r\n        this.coords.y = e.pageY;\r\n        this.setState({\r\n          x: this.state.x - xDiff,\r\n          y: this.state.y - yDiff\r\n        });\r\n      };\r\n\r\n    /** 드래그 사용 유무 */\r\n    dragHandler = (boolean) => {\r\n        this.setState({\r\n            draggable:boolean\r\n        });\r\n    }\r\n\r\n\r\n    selected = (index) =>{\r\n        console.log(\"selected\");\r\n        if(this.closeYN === 'y')\r\n        this.props.folderSelected(index);\r\n    }\r\n    \r\n    close = (index) => {\r\n        console.log(\"close\");\r\n        this.closeYN = 'Y';\r\n        this.props.folderClose(index);\r\n    }\r\n\r\n\r\n    domContent = (name) => {\r\n        switch (name) {\r\n            case 'user-home':\r\n                return ( <div className=\"pop_content\">\r\n                            <div className=\"\">\r\n                            <ul>\r\n                                <li></li>\r\n                                <li></li>\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"pop_preview\">\r\n                            <img src=\"\" alt=\"미리 볼 파일을 선택하십시오.\"/>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n        \r\n            default:\r\n                return ( <div className=\"pop_content\">\r\n                            <div className=\"\">\r\n                            <ul>\r\n                                <li></li>\r\n                                <li></li>\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"subready\">\r\n                                <span> 현재 준비 중입니다. </span>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n        }\r\n    } \r\n\r\n    createModal = () => {\r\n        //console.log(\"sub@@@ : \", this.props.chosenFolder );\r\n        return (\r\n            <div className=\"modal moving\" target=\"\" \r\n                onClick={ () => {this.selected(this.props.chosenFolder.index) } }\r\n                //z-index={this.props.redux_folder.folder[this.props.subIndex].z_index}\r\n                //zIndex={this.props.chosenFolder.z_index} \r\n                draggable={this.state.draggable}\r\n                x={this.state.x}\r\n                y={this.state.y} >\r\n\r\n                <div className=\"pop_head\"\r\n                    onMouseOver={ () => this.dragHandler(true) } \r\n                    onMouseOut ={ () => this.dragHandler(false) }\r\n                    onMouseDown={this.handleMouseDown}\r\n                    onMouseUp  ={this.handleMouseUp}\r\n                    >    \r\n                   {/* <div draggable=\"true\" ondragstart=\"event.dataTransfer.setData('text/plain', 'This text may be dragged')\">\r\n                        This text <strong>may</strong> be dragged.\r\n                    </div> */}\r\n                    <div className=\"pop_folder_img\">\r\n                        <input type=\"button\" alt=\"\" />\r\n                    </div>\r\n                    <div className=\"pop_title\">{ this.props.chosenFolder.text }</div>\r\n                    <div className=\"pop_mng\">\r\n                        <ul>\r\n                            <li>\r\n                                <input type=\"button\" className=\"pop_minsize\"/>\r\n                            </li>\r\n                            <li>\r\n                                <input type=\"button\" className=\"pop_maxsize\"/>\r\n                            </li>\r\n                            <li onClick={ () => { this.close(this.props.chosenFolder.index) } }>\r\n                                <input type=\"button\" className=\"pop_close\" />\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n                {/*\r\n                <nav>\r\n                    <div>\r\n                        <input className=\"pop_navi\" type=\"text\" alt=\"\" />\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"pop_search\" type=\"text\" alt=\"\" />\r\n                    </div>\r\n                </nav> \r\n                */}\r\n                { this.domContent(this.props.chosenFolder.name) }                    \r\n                    \r\n            </div>\r\n            )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.createModal()}\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nconst mapToDispatch = (dispatch) =>({\r\n     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n});\r\n\r\nexport default connect(null,mapToDispatch)(subWindow);","import subWindow from './subWindow';\r\n\r\nexport default subWindow;","import React, { PureComponent, Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport folderCss from './folder.scss';\r\nimport classNames from 'classnames';\r\n// import * as actions from '../../actions';\r\nimport SubWindow from '../subwindow';\r\n\r\nconst scss = classNames.bind(folderCss);\r\nclass Folder extends PureComponent {\r\n\r\n    handleClickEvt = (value,index) => {\r\n        console.log(\" 클릭한 name : \"+value);\r\n        switch (value) {\r\n            case 'tistory':\r\n                console.log(value); \r\n                return window.open('http://backback.tistory.com/');\r\n            case 'github':\r\n                return window.open('https://github.com/FactAttacker?tab=repositories/');    \r\n            default:\r\n                this.openModal(index);\r\n                break;\r\n        }\r\n    }\r\n\r\n    openModal = (index) =>{        \r\n        this.props.folderOpen(index);\r\n        // console.log(this.props.folderOpen);\r\n        // const folder = this.state.folder.map( (key,ind) => {\r\n        //     if(ind === index)\r\n        //         return {...key, open:true, z_index:10}\r\n        //     else\r\n        //         return {...key, z_index:1}\r\n        // });\r\n\r\n        // console.log(\"chosenFolder : \", folder );\r\n        // this.setState({\r\n        //     folder:folder\r\n        // });\r\n    }\r\n\r\n    // closeModal = (index) =>{\r\n    //     // const folder = this.state.folder.map( (key,ind) => {\r\n    //     //     if(ind === index)\r\n    //     //         return {...key, open:false, z_index:1}\r\n    //     //     else\r\n    //     //         return {...key}\r\n    //     // });\r\n    //     // this.setState({\r\n    //     //     folder:folder\r\n    //     // });\r\n    //     this.props.folderClose(index);\r\n    // }\r\n\r\n    handleShowFolder = () =>{\r\n        // const folders = this.state.folder;\r\n        const folders = this.props.redux_folder.folder;\r\n        console.log(\"redux_folder : \",this.props.redux_folder);\r\n        console.log(\"folders : \",folders.length);\r\n        const liList = (data,index) => {\r\n            return(\r\n                <li key={'folder-list-'+index}>\r\n                    <div className={scss('folder')}\r\n                        onClick={()=>{this.handleClickEvt(data.name,index)}}>\r\n                        <img src={data.imgUrl} alt={data.text}/>\r\n                        <div className={scss('text')}>\r\n                            <span>{data.text}</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        const ulGroup = (rowData,index) =>(\r\n            <ul className=\"folder_row\" \r\n                key={'folder-group-'+index}> {rowData} </ul>\r\n        );\r\n            \r\n        let arrayList = [];\r\n        let rowData   = [];\r\n        let arrayNum  = folders.length;\r\n        for(let i =0 ; arrayNum > i ; i++){\r\n            if( i !==0 && i%3 === 0){ // 행 갯수 \r\n                // console.log(\" folder :\"+ folders[i].name);\r\n                arrayList.push(ulGroup(rowData,i));\r\n                rowData = [];\r\n            }\r\n            rowData.push(liList(folders[i],i)); \r\n            if(arrayNum === (i+1)) arrayList.push(ulGroup(rowData,(i+1)));\r\n        };\r\n        return arrayList;\r\n    }\r\n    \r\n    render(){\r\n        // console.log(\"modal state : \", this.state.folder);\r\n        // console.log(\"modal props : \", this.props);\r\n        // console.log(\"modal props.redux_folder : \", this.props.redux_folder);\r\n        return(\r\n            <Fragment>\r\n                <div id=\"content\">\r\n                    <div className=\"desktop_bg fade\" />\r\n                    <div className=\"desktop\">\r\n                        {this.handleShowFolder()}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.props.redux_folder.folder.map( (element,idx) => {\r\n                        if( element.open ){\r\n                            return <SubWindow key={ 'window-'+idx } subIndex={idx} chosenFolder={ element }/>\r\n                        }\r\n                        return null;\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    console.log(\"mapStateToProps : \",state);\r\n    return state;\r\n}\r\n\r\n// const mapToDispatch = (dispatch) =>({\r\n//     folderOpen    : (index) => dispatch(actions.folderOpen(index)),\r\n//     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n//     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n// });\r\n\r\n// export default connect(mapStateToProps,mapToDispatch)(Folder);\r\nexport default connect(mapStateToProps)(Folder);","import folder from './folder.js'\r\n\r\nexport default folder;","import React, { PureComponent } from 'react'\r\nimport taskbarCss from './taskbar.scss';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst scss = classNames.bind(taskbarCss);\r\nlet clockSatus = 'FIRST';\r\nexport default class taskbar extends PureComponent{\r\n    \r\n    state = {\r\n          amPm:null,\r\n          currentHours:null,\r\n          currentMinute:null,\r\n          calendar:null,\r\n          clockSec:null,\r\n    }\r\n\r\n    // 자릿수 맞춰주기\r\n    addZeros = (num, digit) => { \r\n        let zero = '';\r\n        num = num.toString();\r\n        if ( num.length < digit ) \r\n            for (let i = 0; i < digit - num.length; i++) \r\n                zero += '0';\r\n        return zero + num;\r\n    }\r\n  \r\n    //setState가 componentDidMount후에 일어나기 때문에 setInterval 시간초를 맞추기 위한 처리\r\n    componentWillMount(){ //getderivedstatefromprops\r\n        this.handleChangeTime();\r\n    }\r\n    componentDidMount(){//최초 실행 한번 실행\r\n        setTimeout(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n    componentDidUpdate(){//1분마다 실행\r\n        setInterval(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n\r\n    handleChangeTime = () => {\r\n        let clockSec =0;\r\n        const currentDate = new Date(); // 현재시간\r\n        let calendar = currentDate.getFullYear() + \"-\" + this.addZeros((currentDate.getMonth()+1), 2) + \"-\" + this.addZeros(currentDate.getDate(),2); // 현재 날짜\r\n        let currentHours   = this.addZeros(currentDate.getHours(),2); \r\n        let currentMinute  = this.addZeros(currentDate.getMinutes(),2);\r\n\r\n        let currentSeconds = this.addZeros(currentDate.getSeconds(),2);\r\n        \r\n        let amPm = '오전'; //초기값 AM\r\n        if(currentHours >= 12){ //시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n            amPm = '오후';\r\n            currentHours = this.addZeros(currentHours - 12,2);\r\n        }\r\n        if(amPm === '오전' && currentHours === 0) currentHours=12;\r\n\r\n        if(clockSatus != null){\r\n            clockSec = 60000 - (currentSeconds * 1000); \r\n            clockSatus = null;\r\n        }else clockSec = 60000;\r\n\r\n        console.log('현재 시간 : '+currentHours+ ' : ' + currentMinute);\r\n        this.setState({\r\n            amPm,\r\n            currentHours,\r\n            currentMinute,\r\n            calendar,\r\n            clockSec:parseInt(clockSec),\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"task_bar\">\r\n                    {/* <!-- 윈도우 시작 버튼 --> */}\r\n                    <input className={scss('start_bnt')} type=\"button\" />\r\n\r\n                    {/* <!-- 스피커 --> */}\r\n                    <input className={scss('sound_on_btn')} type=\"button\" alt=\"사운드\" />\r\n\r\n                    {/* {날짜 시간} */}\r\n                    <div className={scss('date_box')}> \r\n                        <p className={scss('clock')}><span>{this.state.amPm + ' ' + Number(this.state.currentHours) + ':' + this.state.currentMinute }</span></p>\r\n                        <p className={scss('date')}><span>{this.state.calendar}</span></p>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import taskbar from './taskbar';\r\n\r\nexport default taskbar;","import React, { PureComponent } from 'react';\r\nimport Folder from '../conponent/folder';\r\nimport Taskbar from '../conponent/taskbar';\r\nimport './App.scss'; \r\n\r\nimport * as actions from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    const {folderOpen,folderSelected} = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Folder\r\n          folderOpen     ={folderOpen}         \r\n          folderSelected ={folderSelected}         \r\n          />\r\n        <Taskbar\r\n          // folderOpen     ={folderOpen}         \r\n          // folderSelected ={folderSelected}         \r\n          // folderClose    ={folderClose}         \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapToDispatch = (dispatch) =>({\r\n     folderOpen    : (index) => dispatch(actions.folderOpen(index)),\r\n     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n});\r\n\r\nexport default connect(null, mapToDispatch)(App);","import { combineReducers } from 'redux';\r\nimport Reducer_folder from './reducer_folder';\r\nimport * as types from '../actions/actionType';\r\n\r\nconst root_reducer = {\r\n    folder : Reducer_folder,\r\n} \r\n\r\nfunction redux_folder (state = root_reducer, action) {\r\n    const {folder} = state; \r\n\r\n    switch(action.type){\r\n        case types.FOLDER_OPEN:\r\n            return { folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:true, z_index:10}\r\n                else\r\n                    return {...key, z_index:1}\r\n                })};\r\n        \r\n        case types.FOLDER_CLOSE: \r\n            return {folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:false, z_index:1}\r\n                else\r\n                    return {...key}\r\n                })};\r\n\r\n        case types.FOLDER_SELECTED: \r\n            return {folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:true, z_index:10 ,chosen:true}\r\n                else\r\n                    return {...key, z_index:1, chosen:false}\r\n                })};\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({redux_folder});","export default [\r\n            {name:'github'    ,index:0, text:'Github'  ,imgUrl:'./image/github.png',     open: false    ,z_index : 1 , chosen:false},\r\n            {name:'user-home' ,index:1, text:'About Me',imgUrl:'./image/user-home.png',  open: false    ,z_index : 1 , chosen:false},\r\n            {name:'works'     ,index:2, text:'Works'   ,imgUrl:'./image/computer.png',   open: false    ,z_index : 1 , chosen:false},\r\n            {name:'tistory'   ,index:3, text:'Tistory' ,imgUrl:'./image/logomark.svg',   open: false    ,z_index : 1 , chosen:false},\r\n            {name:'user-trash',index:4, text:'휴지통'   ,imgUrl:'./image/user-trash.png', open: false    ,z_index : 1 , chosen:false},\r\n        ]\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\n// import reduxActions from './redux-actions';\r\nimport reduxActions from './reducer';\r\n\r\nconst logger = createLogger();\r\nexport default createStore(reduxActions,applyMiddleware(logger));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './conents/App';\r\nimport './reset.scss';\r\n\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}