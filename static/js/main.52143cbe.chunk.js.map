{"version":3,"sources":["actions/actionType.js","actions/index.js","conponent/submenulist/aboutMe.js","conponent/subwindow/subWindow.js","conponent/subwindow/index.js","conponent/folder/folder.js","conponent/folder/index.js","conponent/taskbar/taskbar.js","conponent/taskbar/index.js","conents/App.js","reducer/index.js","reducer/reducer_folder.js","store.js","index.js"],"names":["FOLDER_OPEN","FOLDER_SELECTED","FOLDER_CLOSE","folderSelected","index","type","types","folderClose","aboutMe","code","name","subMenu","birthDay","school","text","react_default","a","createElement","career","date","company","part","skill","study","title","subWindow","props","_this","_this2","this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleMouseDown","e","console","log","coords","x","pageX","y","pageY","document","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","xDiff","yDiff","setState","state","handleDrag","_ref","deltaX","deltaY","dragHandler","boolean","draggable","selected","closeYN","close","Subtitle","styled","li","_templateObject","aboutMeContentDOM","AM","CA","map","key","ST","aboutMeContent","domContent","className","onClick","objectSpread","contentCode","modalSizeChange","modalSizeClass","createModal","react_draggable_default","onDrag","target","chosenFolder","onMouseOver","onMouseOut","onMouseDown","onMouseUp","alt","PureComponent","connect","dispatch","actions","scss","classNames","bind","folderCss","Folder","handleClickEvt","value","window","open","openModal","folderOpen","handleShowFolder","folders","redux_folder","folder","length","liList","data","src","imgUrl","ulGroup","rowData","arrayList","arrayNum","i","push","react","id","element","idx","subwindow","subIndex","taskbarCss","clockSatus","taskbar","amPm","currentHours","currentMinute","calendar","clockSec","addZeros","num","digit","zero","toString","handleChangeTime","currentDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","currentSeconds","getSeconds","parseInt","setTimeout","setInterval","Number","App","_this$props","conponent_folder","conponent_taskbar","root_reducer","z_index","chosen","combineReducers","arguments","undefined","action","logger","createLogger","createStore","reduxActions","applyMiddleware","ReactDOM","render","es","store","src_conents_App","getElementById"],"mappings":"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","file":"static/js/main.52143cbe.chunk.js","sourcesContent":["export const FOLDER_OPEN        = 'FOLDER_OPEN';\r\nexport const FOLDER_SELECTED    = 'FOLDER_SELECTED';\r\nexport const FOLDER_CLOSE       = 'FOLDER_CLOSE';","import * as types from './actionType';\r\n\r\nexport function folderOpen(index){\r\n    return {\r\n        type : types.FOLDER_OPEN,\r\n        index\r\n    }\r\n}\r\n\r\nexport function folderSelected(index){\r\n    return {\r\n        type : types.FOLDER_SELECTED,\r\n        index\r\n    }\r\n}\r\n\r\nexport function folderClose(index){\r\n    return {\r\n        type : types.FOLDER_CLOSE,\r\n        index\r\n    }\r\n}","import React from 'react';\r\n\r\n// 자기 소개\r\nconst aboutText = () => <div>\r\n                           <p>만나뵙게 되어서 반갑습니다!</p>\r\n                           <p>호기심과 열정을 가진</p>\r\n                           <p>즐기는 웹 개발자가 되도록 하겠습니다</p>\r\n                        </div>;\r\nexport const aboutMe =   {\r\n        code    :'AM',\r\n        name    :'자기소개',\r\n        subMenu :[\r\n            {\r\n                 name:'박도현'\r\n                ,birthDay:'1989.01.14'\r\n                ,school:'극동대학교(4) 유비쿼터스IT 학과'\r\n                ,text:aboutText()\r\n            }\r\n        ]\r\n    }\r\n\r\n//경력\r\nexport const career = {\r\n        code    :'CA',\r\n        name    :'경력',\r\n        subMenu :[\r\n            {\r\n                 date:'2014.06~2015.07'\r\n                ,company:'무한통신'\r\n                ,part:'웹 퍼블리셔'\r\n                ,text:'모바일 유통 웹 퍼블리싱'\r\n                ,skill:'HTML5,CSS3,JQuery'\r\n            },\r\n            {\r\n                 date:'2016.08~2018.09'\r\n                ,company:'이씨오'\r\n                ,part:'미들웨어 Backand 개발자'\r\n                ,text:'도서관 자료관리 시스템 개발'\r\n                ,skill:'Java,Spring,Oracle,Tibero,JSP,REST API,SVN,Mybatis,JavaScript'\r\n            }\r\n        ]\r\n    }\r\n\r\n//강의\r\nexport const study =   {\r\n        code    :'ST',\r\n        name    :'강의',\r\n        subMenu :[\r\n            {\r\n                 date:'2015.07~2015.11'\r\n                ,company:'시사직업전문학교'\r\n                ,title:'웹 퍼블리셔 전문가'\r\n                ,skill:'W3C웹표준,HTML5,CSS3,JQuery,photoshop,illustrator'\r\n            },\r\n            {\r\n                 date:'2015.12~2016.06'\r\n                ,company:'경영기술개발교육센터'\r\n                ,title:'스마트웹앱콘텐츠전문가'\r\n                ,skill:'Java,Spring,Oracle,JSP,SVN,JavaScript,Hadoop'\r\n            },\r\n            {\r\n                date:'2018.09~2018.10'\r\n               ,company:'그린컴퓨터아트학원'\r\n               ,title:'Node.js - 응용 SW엔지니어링'\r\n               ,skill:'Node.js,express,MongoDB'\r\n            },\r\n            {\r\n                date:'2018.09~2018.10'\r\n               ,company:'한국소프트웨어인재개발원'\r\n               ,title:'TypeScript & Angualr 향상과정'\r\n               ,skill:'Angular,TypeScript,webPack,babel'\r\n            },\r\n            {\r\n                date:'2016.06~'\r\n               ,company:'주말 스터디'\r\n               ,title:'프론트엔드 스터디'\r\n               ,skill:'ES6,Node.js,React.js,SCSS,docker...'\r\n            }\r\n        ]\r\n    }\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DraggableCore from 'react-draggable';\r\nimport styled from 'styled-components';\r\nimport * as actions from '../../actions';\r\nimport './subWindow.scss';\r\nimport {aboutMe,career,study}  from '../submenulist/aboutMe';\r\n\r\nclass subWindow extends PureComponent {\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            draggable:false,\r\n            x: 0,\r\n            y: 0,\r\n            contentCode:'',\r\n            modalSizeClass: 'pop_maxsize_on'\r\n        }\r\n    }\r\n\r\n    /**드래그*/\r\n    handleMouseDown = (e) => {\r\n        console.log(\"handleMouseDown : \",e);\r\n        this.coords = {\r\n            x: e.pageX,\r\n            y: e.pageY\r\n        }\r\n        document.addEventListener('mousemove', this.handleMouseMove);\r\n    };\r\n    handleMouseUp = () => {\r\n        document.removeEventListener('mousemove', this.handleMouseMove);\r\n        this.coords = {};\r\n    };\r\n    handleMouseMove = (e) => {\r\n        const xDiff = this.coords.x - e.pageX;\r\n        const yDiff = this.coords.y - e.pageY;\r\n        this.coords.x = e.pageX;\r\n        this.coords.y = e.pageY;\r\n        this.setState({\r\n          x: this.state.x - xDiff,\r\n          y: this.state.y - yDiff\r\n        });\r\n      };\r\n    handleDrag = (e, { deltaX, deltaY }) => {\r\n        this.setState({\r\n            x: this.state.x + deltaX,\r\n            y: this.state.y + deltaY\r\n        });\r\n    };  \r\n\r\n    /** 드래그 사용 유무 */\r\n    dragHandler = (boolean) => {\r\n        this.setState({\r\n            draggable:boolean\r\n        });\r\n    }\r\n\r\n    /*창 버튼 */\r\n    selected = (index) => {\r\n        console.log(\"selected\");\r\n        if(this.closeYN === 'y')\r\n        this.props.folderSelected(index);\r\n        this.closeYN = '';\r\n    }\r\n    close = (index) => {\r\n        console.log(\"close\");\r\n        this.closeYN = 'Y';\r\n        this.props.folderClose(index);\r\n    }\r\n\r\n    /*스타일 */\r\n    Subtitle = styled.li`\r\n        padding:0.5rem 0 0.2rem;\r\n        span{\r\n            font-weight: bold;\r\n        }\r\n    `;\r\n\r\n    aboutMeContentDOM = {\r\n        AM : (<ul>\r\n                <this.Subtitle>\r\n                    <span>이름 : </span>{aboutMe.subMenu[0].name}\r\n                </this.Subtitle>\r\n                <this.Subtitle>\r\n                    <span>생년월일 : </span>{aboutMe.subMenu[0].birthDay}\r\n                </this.Subtitle>\r\n                <this.Subtitle>\r\n                    <span>학력 : </span>{aboutMe.subMenu[0].birthDay}\r\n                </this.Subtitle>\r\n                <this.Subtitle>\r\n                    {aboutMe.subMenu[0].text}\r\n                </this.Subtitle>\r\n            </ul>)\r\n        ,CA : career.subMenu.map((key) => { \r\n                return <ul>\r\n                            <this.Subtitle>\r\n                                <span>{key.date}</span>\r\n                            </this.Subtitle>\r\n                            <li>\r\n                                <span>회사 : </span>{key.company}\r\n                            </li>\r\n                            <li>\r\n                                <span>직종: </span>{key.part}\r\n                            </li>\r\n                            <li>\r\n                                <span>업무: </span>{key.text}\r\n                            </li>\r\n                            <li>\r\n                                <span>기술: </span>{key.skill}\r\n                            </li>\r\n                        </ul>\r\n                })\r\n        ,ST :  study.subMenu.map((key) => { \r\n                return <ul>\r\n                            <this.Subtitle>\r\n                                <span>{key.date}</span>\r\n                            </this.Subtitle>\r\n                            <li>\r\n                                <span>회사 : </span>{key.company}\r\n                            </li>\r\n                            <li>\r\n                                <span>과정명: </span>{key.title}\r\n                            </li>\r\n                            <li>\r\n                                <span>기술: </span>{key.skill}\r\n                            </li>\r\n                        </ul>\r\n                })        \r\n    }\r\n\r\n    aboutMeContent = (code) => {\r\n        switch (code) {\r\n            case 'AM':\r\n                return this.aboutMeContentDOM.AM;\r\n            case 'CA':\r\n                return this.aboutMeContentDOM.CA;\r\n            \r\n            case 'ST':\r\n                return this.aboutMeContentDOM.ST;    \r\n                \r\n            default: \r\n                return this.aboutMeContentDOM.AM;\r\n        }\r\n    }\r\n\r\n    domContent = (name) => {\r\n        switch (name) {\r\n            case 'user-home':\r\n                console.log(\"aboutMe : \",aboutMe.subMenu);\r\n                return ( \r\n                        <div className=\"pop_content\">\r\n                            <div className=\"\">\r\n                            <ul>\r\n                                <li></li>\r\n                                <li></li>\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"pop_preview\">\r\n                                {/* <img src=\"\" alt=\"미리 볼 파일을 선택하십시오.\"/> */}\r\n                                <div className=\"menu-list\">\r\n                                    <ul>\r\n                                        <li className=\"user-menu-1\" onClick={() => this.setState({ ...this.state, contentCode: aboutMe.code}) } >\r\n                                            {aboutMe.name}\r\n                                        </li>\r\n                                        <li className=\"user-menu-2\" onClick={() => this.setState({ ...this.state, contentCode: career.code}) }>\r\n                                            {career.name}   \r\n                                        </li>\r\n                                        <li className=\"user-menu-3\" onClick={() => this.setState({ ...this.state, contentCode: study.code}) }>\r\n                                            {study.name}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"sub-content\">\r\n                                    {this.aboutMeContent(this.state.contentCode)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n        \r\n            default:\r\n                return ( <div className=\"pop_content\">\r\n                            <div className=\"\">\r\n                            <ul>\r\n                                <li></li>\r\n                                <li></li>\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"subready\">\r\n                                <span> 현재 준비 중입니다. </span>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n        }\r\n    } \r\n\r\n\r\n    modalSizeChange = () => {\r\n        if(this.state.modalSizeClass === 'pop_maxsize_on')\r\n            this.setState({...this.state,modalSizeClass:'pop_maxsize'})\r\n        else\r\n            this.setState({...this.state,modalSizeClass:'pop_maxsize_on'})\r\n    }\r\n\r\n    createModal = () => {\r\n        //console.log(\"sub@@@ : \", this.props.chosenFolder );\r\n        return (\r\n            <DraggableCore onDrag={this.handleDrag}>\r\n                <div className=\"modal moving\" target=\"\" \r\n                    onClick={ () => {this.selected(this.props.chosenFolder.index) } }\r\n                    //z-index={this.props.redux_folder.folder[this.props.subIndex].z_index}\r\n                    //zIndex={this.props.chosenFolder.z_index} \r\n                    draggable={this.state.draggable}\r\n                    x={this.state.x}\r\n                    y={this.state.y} >\r\n\r\n                    <div className=\"pop_head\"\r\n                        onMouseOver={ () => this.dragHandler(true) } \r\n                        onMouseOut ={ () => this.dragHandler(false) }\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseUp  ={this.handleMouseUp}\r\n                        >    \r\n                   \r\n                        <div className=\"pop_folder_img\">\r\n                            <input type=\"button\" alt=\"\" />\r\n                        </div>\r\n                        <div className=\"pop_title\">{ this.props.chosenFolder.text }</div>\r\n                        <div className=\"pop_mng\">\r\n                            <ul>\r\n                                <li>\r\n                                    <input type=\"button\" className=\"pop_minsize\"/>\r\n                                </li>\r\n                                <li onClick={() => {this.modalSizeChange()}}>\r\n                                    <input type=\"button\" className={this.state.modalSizeClass}/>\r\n                                </li>\r\n                                <li onClick={ () => { this.close(this.props.chosenFolder.index) } }>\r\n                                    <input type=\"button\" className=\"pop_close\" />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <nav>\r\n                        <div>\r\n                            <input className=\"pop_navi\" type=\"text\" alt=\"\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"pop_search\" type=\"text\" alt=\"\" />\r\n                        </div>\r\n                    </nav> \r\n                    */}\r\n                    { this.domContent(this.props.chosenFolder.name) }                    \r\n                </div>\r\n            </DraggableCore>\r\n            )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.createModal()}\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nconst mapToDispatch = (dispatch) =>({\r\n     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n});\r\n\r\nexport default connect(null,mapToDispatch)(subWindow);","import subWindow from './subWindow';\r\n\r\nexport default subWindow;","import React, { PureComponent, Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport folderCss from './folder.scss';\r\nimport classNames from 'classnames';\r\n// import * as actions from '../../actions';\r\nimport SubWindow from '../subwindow';\r\n\r\nconst scss = classNames.bind(folderCss);\r\nclass Folder extends PureComponent {\r\n\r\n    handleClickEvt = (value,index) => {\r\n        console.log(\" 클릭한 name : \"+value);\r\n        switch (value) {\r\n            case 'tistory':\r\n                console.log(value); \r\n                return window.open('http://backback.tistory.com/');\r\n            case 'github':\r\n                return window.open('https://github.com/FactAttacker?tab=repositories/');    \r\n            default:\r\n                this.openModal(index);\r\n                break;\r\n        }\r\n    }\r\n\r\n    openModal = (index) =>{        \r\n        this.props.folderOpen(index);\r\n        // console.log(this.props.folderOpen);\r\n        // const folder = this.state.folder.map( (key,ind) => {\r\n        //     if(ind === index)\r\n        //         return {...key, open:true, z_index:10}\r\n        //     else\r\n        //         return {...key, z_index:1}\r\n        // });\r\n\r\n        // console.log(\"chosenFolder : \", folder );\r\n        // this.setState({\r\n        //     folder:folder\r\n        // });\r\n    }\r\n\r\n    // closeModal = (index) =>{\r\n    //     // const folder = this.state.folder.map( (key,ind) => {\r\n    //     //     if(ind === index)\r\n    //     //         return {...key, open:false, z_index:1}\r\n    //     //     else\r\n    //     //         return {...key}\r\n    //     // });\r\n    //     // this.setState({\r\n    //     //     folder:folder\r\n    //     // });\r\n    //     this.props.folderClose(index);\r\n    // }\r\n\r\n    handleShowFolder = () =>{\r\n        // const folders = this.state.folder;\r\n        const folders = this.props.redux_folder.folder;\r\n        console.log(\"redux_folder : \",this.props.redux_folder);\r\n        console.log(\"folders : \",folders.length);\r\n        const liList = (data,index) => {\r\n            return(\r\n                <li key={'folder-list-'+index}>\r\n                    <div className={scss('folder')}\r\n                        onClick={()=>{this.handleClickEvt(data.name,index)}}>\r\n                        <img src={data.imgUrl} alt={data.text}/>\r\n                        <div className={scss('text')}>\r\n                            <span>{data.text}</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        const ulGroup = (rowData,index) =>(\r\n            <ul className=\"folder_row\" \r\n                key={'folder-group-'+index}> {rowData} </ul>\r\n        );\r\n            \r\n        let arrayList = [];\r\n        let rowData   = [];\r\n        let arrayNum  = folders.length;\r\n        for(let i =0 ; arrayNum > i ; i++){\r\n            if( i !==0 && i%3 === 0){ // 행 갯수 \r\n                // console.log(\" folder :\"+ folders[i].name);\r\n                arrayList.push(ulGroup(rowData,i));\r\n                rowData = [];\r\n            }\r\n            rowData.push(liList(folders[i],i)); \r\n            if(arrayNum === (i+1)) arrayList.push(ulGroup(rowData,(i+1)));\r\n        };\r\n        return arrayList;\r\n    }\r\n    \r\n    render(){\r\n        // console.log(\"modal state : \", this.state.folder);\r\n        // console.log(\"modal props : \", this.props);\r\n        // console.log(\"modal props.redux_folder : \", this.props.redux_folder);\r\n        return(\r\n            <Fragment>\r\n                <div id=\"content\">\r\n                    <div className=\"desktop_bg fade\" />\r\n                    <div className=\"desktop\">\r\n                        {this.handleShowFolder()}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.props.redux_folder.folder.map( (element,idx) => {\r\n                        if( element.open ){\r\n                            return <SubWindow key={ 'window-'+idx } subIndex={idx} chosenFolder={ element }/>\r\n                        }\r\n                        return null;\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    console.log(\"mapStateToProps : \",state);\r\n    return state;\r\n}\r\n\r\n// const mapToDispatch = (dispatch) =>({\r\n//     folderOpen    : (index) => dispatch(actions.folderOpen(index)),\r\n//     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n//     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n// });\r\n\r\n// export default connect(mapStateToProps,mapToDispatch)(Folder);\r\nexport default connect(mapStateToProps)(Folder);","import folder from './folder.js'\r\n\r\nexport default folder;","import React, { PureComponent } from 'react'\r\nimport taskbarCss from './taskbar.scss';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst scss = classNames.bind(taskbarCss);\r\nlet clockSatus = 'FIRST';\r\nexport default class taskbar extends PureComponent{\r\n    \r\n    state = {\r\n          amPm:null,\r\n          currentHours:null,\r\n          currentMinute:null,\r\n          calendar:null,\r\n          clockSec:null,\r\n    }\r\n\r\n    // 자릿수 맞춰주기\r\n    addZeros = (num, digit) => { \r\n        let zero = '';\r\n        num = num.toString();\r\n        if ( num.length < digit ) \r\n            for (let i = 0; i < digit - num.length; i++) \r\n                zero += '0';\r\n        return zero + num;\r\n    }\r\n  \r\n    //setState가 componentDidMount후에 일어나기 때문에 setInterval 시간초를 맞추기 위한 처리\r\n    componentWillMount(){ //getderivedstatefromprops\r\n        this.handleChangeTime();\r\n    }\r\n    componentDidMount(){//최초 실행 한번 실행\r\n        setTimeout(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n    componentDidUpdate(){//1분마다 실행\r\n        setInterval(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n\r\n    handleChangeTime = () => {\r\n        let clockSec =0;\r\n        const currentDate = new Date(); // 현재시간\r\n        let calendar = currentDate.getFullYear() + \"-\" + this.addZeros((currentDate.getMonth()+1), 2) + \"-\" + this.addZeros(currentDate.getDate(),2); // 현재 날짜\r\n        let currentHours   = this.addZeros(currentDate.getHours(),2); \r\n        let currentMinute  = this.addZeros(currentDate.getMinutes(),2);\r\n\r\n        let currentSeconds = this.addZeros(currentDate.getSeconds(),2);\r\n        \r\n        let amPm = '오전'; //초기값 AM\r\n        if(currentHours >= 12){ //시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n            amPm = '오후';\r\n            currentHours = this.addZeros(currentHours - 12,2);\r\n        }\r\n        if(amPm === '오전' && currentHours === 0) currentHours=12;\r\n\r\n        if(clockSatus != null){\r\n            clockSec = 60000 - (currentSeconds * 1000); \r\n            clockSatus = null;\r\n        }else clockSec = 60000;\r\n\r\n        console.log('현재 시간 : '+currentHours+ ' : ' + currentMinute);\r\n        this.setState({\r\n            amPm,\r\n            currentHours,\r\n            currentMinute,\r\n            calendar,\r\n            clockSec:parseInt(clockSec),\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"task_bar\">\r\n                    {/* <!-- 윈도우 시작 버튼 --> */}\r\n                    <input className={scss('start_bnt')} type=\"button\" />\r\n\r\n                    {/* <!-- 스피커 --> */}\r\n                    <input className={scss('sound_on_btn')} type=\"button\" alt=\"사운드\" />\r\n\r\n                    {/* {날짜 시간} */}\r\n                    <div className={scss('date_box')}> \r\n                        <p className={scss('clock')}><span>{this.state.amPm + ' ' + Number(this.state.currentHours) + ':' + this.state.currentMinute }</span></p>\r\n                        <p className={scss('date')}><span>{this.state.calendar}</span></p>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import taskbar from './taskbar';\r\n\r\nexport default taskbar;","import React, { PureComponent } from 'react';\r\nimport Folder from '../conponent/folder';\r\nimport Taskbar from '../conponent/taskbar';\r\nimport './App.scss'; \r\n\r\nimport * as actions from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    const {folderOpen,folderSelected} = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Folder\r\n          folderOpen     ={folderOpen}         \r\n          folderSelected ={folderSelected}         \r\n          />\r\n        <Taskbar\r\n          // folderOpen     ={folderOpen}         \r\n          // folderSelected ={folderSelected}         \r\n          // folderClose    ={folderClose}         \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapToDispatch = (dispatch) =>({\r\n     folderOpen    : (index) => dispatch(actions.folderOpen(index)),\r\n     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n});\r\n\r\nexport default connect(null, mapToDispatch)(App);","import { combineReducers } from 'redux';\r\nimport Reducer_folder from './reducer_folder';\r\nimport * as types from '../actions/actionType';\r\n\r\nconst root_reducer = {\r\n    folder : Reducer_folder,\r\n} \r\n\r\nfunction redux_folder (state = root_reducer, action) {\r\n    const {folder} = state; \r\n\r\n    switch(action.type){\r\n        case types.FOLDER_OPEN:\r\n            return { folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:true, z_index:10}\r\n                else\r\n                    return {...key, z_index:1}\r\n                })};\r\n        \r\n        case types.FOLDER_CLOSE: \r\n            return {folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:false, z_index:1}\r\n                else\r\n                    return {...key}\r\n                })};\r\n\r\n        case types.FOLDER_SELECTED: \r\n            return {folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:true, z_index:10 ,chosen:true}\r\n                else\r\n                    return {...key, z_index:1, chosen:false}\r\n                })};\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({redux_folder});","export default [\r\n            {name:'github'    ,index:0, text:'Github'  ,imgUrl:'./image/github.png',     open: false    ,z_index : 1 , chosen:false},\r\n            {name:'user-home' ,index:1, text:'About Me',imgUrl:'./image/user-home.png',  open: false    ,z_index : 1 , chosen:false},\r\n            {name:'works'     ,index:2, text:'Works'   ,imgUrl:'./image/computer.png',   open: false    ,z_index : 1 , chosen:false},\r\n            {name:'tistory'   ,index:3, text:'Tistory' ,imgUrl:'./image/logomark.svg',   open: false    ,z_index : 1 , chosen:false},\r\n            {name:'user-trash',index:4, text:'휴지통'   ,imgUrl:'./image/user-trash.png', open: false    ,z_index : 1 , chosen:false},\r\n        ]\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\n// import reduxActions from './redux-actions';\r\nimport reduxActions from './reducer';\r\n\r\nconst logger = createLogger();\r\nexport default createStore(reduxActions,applyMiddleware(logger));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './conents/App';\r\nimport './reset.scss';\r\n\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}