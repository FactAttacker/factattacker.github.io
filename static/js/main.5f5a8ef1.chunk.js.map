{"version":3,"sources":["actions/actionType.js","actions/index.js","conponent/submenulist/aboutMe.js","conponent/subwindow/subWindow.js","conponent/subwindow/index.js","conponent/folder/folder.js","conponent/folder/index.js","conponent/taskbar/taskbar.js","conponent/taskbar/index.js","conents/App.js","reducer/index.js","reducer/reducer_folder.js","store.js","index.js"],"names":["FOLDER_OPEN","FOLDER_SELECTED","FOLDER_CLOSE","folderSelected","index","type","types","folderClose","aboutMe","code","name","subMenu","birthDay","school","text","react_default","a","createElement","career","date","company","part","skill","study","title","subWindow","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","selected","closeYN","close","Subtitle","styled","li","_templateObject","aboutMeContentDOM","AM","className","src","alt","CA","map","key","ST","aboutMeContent","domContent","console","log","onClick","setState","objectSpread","state","contentCode","modalSizeChange","modalSizeClass","modalSizeBoolean","createModal","react_draggable_default","handle","disabled","max_modal","onMouseDownCapture","chosenFolder","style","zIndex","z_index","imgUrl","text_color_ddd","chosen","PureComponent","connect","dispatch","actions","scss","classNames","bind","folderCss","Folder","handleClickEvt","value","window","open","folderOpen","handleShowFolder","folders","redux_folder","folder","liList","data","ulGroup","rowData","arrayList","arrayNum","length","i","push","react","id","element","idx","subwindow","subIndex","taskbarCss","clockSatus","taskbar","amPm","currentHours","currentMinute","calendar","clockSec","addZeros","num","digit","zero","toString","handleChangeTime","currentDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","currentSeconds","getSeconds","parseInt","quickIconClick","setTimeout","setInterval","_this2","open_icon","active_icon","Number","App","_this$props","conponent_folder","conponent_taskbar","root_reducer","array","combineReducers","arguments","undefined","action","indexOf","splice","logger","createLogger","createStore","reduxActions","applyMiddleware","ReactDOM","render","es","store","src_conents_App","document","getElementById"],"mappings":"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","file":"static/js/main.5f5a8ef1.chunk.js","sourcesContent":["export const FOLDER_OPEN        = 'FOLDER_OPEN';\r\nexport const FOLDER_SELECTED    = 'FOLDER_SELECTED';\r\nexport const FOLDER_CLOSE       = 'FOLDER_CLOSE';","import * as types from './actionType';\r\n\r\nexport function folderOpen(index){\r\n    return {\r\n        type : types.FOLDER_OPEN,\r\n        index\r\n    }\r\n}\r\n\r\nexport function folderSelected(index){\r\n    return {\r\n        type : types.FOLDER_SELECTED,\r\n        index\r\n    }\r\n}\r\n\r\nexport function folderClose(index){\r\n    return {\r\n        type : types.FOLDER_CLOSE,\r\n        index\r\n    }\r\n}","import React from 'react';\r\n\r\n// 자기 소개\r\nconst aboutText = () => <div>\r\n                           <p>만나뵙게 되어서 반갑습니다!</p>\r\n                           <p>호기심과 열정을 가진 즐기는 </p>\r\n                           <p>웹 개발자가 되도록 하겠습니다.</p>\r\n                        </div>;\r\nexport const aboutMe =   {\r\n        code    :'AM',\r\n        name    :'자기소개',\r\n        subMenu :[\r\n            {\r\n                 name:'박도현'\r\n                ,birthDay:'1989.01.14'\r\n                ,school:'극동대학교(4) 유비쿼터스IT 학과'\r\n                ,text:aboutText()\r\n            }\r\n        ]\r\n    }\r\n\r\n//경력\r\nexport const career = {\r\n        code    :'CA',\r\n        name    :'경력',\r\n        subMenu :[\r\n            {\r\n                 date:'2014.06~2015.07'\r\n                ,company:'무한통신'\r\n                ,part:'웹 퍼블리셔'\r\n                ,text:'모바일 유통 웹 퍼블리싱'\r\n                ,skill:'HTML5,CSS3,JQuery'\r\n            },\r\n            {\r\n                 date:'2016.08~2018.09'\r\n                ,company:'이씨오'\r\n                ,part:'미들웨어 Backand 개발자'\r\n                ,text:'도서관 자료관리 시스템 개발'\r\n                ,skill:'Java,Spring,Oracle,Tibero,JSP,REST API,SVN,Mybatis,JavaScript'\r\n            }\r\n        ]\r\n    }\r\n\r\n//강의\r\nexport const study =   {\r\n        code    :'ST',\r\n        name    :'강의',\r\n        subMenu :[\r\n            {\r\n                 date:'2015.07~2015.11'\r\n                ,company:'시사직업전문학교'\r\n                ,title:'웹 퍼블리셔 전문가'\r\n                ,skill:'W3C웹표준,HTML5,CSS3,JQuery,photoshop,illustrator'\r\n            },\r\n            {\r\n                 date:'2015.12~2016.06'\r\n                ,company:'경영기술개발교육센터'\r\n                ,title:'스마트웹앱콘텐츠전문가'\r\n                ,skill:'Java,Spring,Oracle,JSP,SVN,JavaScript,Hadoop'\r\n            },\r\n            {\r\n                date:'2018.09~2018.10'\r\n               ,company:'그린컴퓨터아트학원'\r\n               ,title:'Node.js - 응용 SW엔지니어링'\r\n               ,skill:'Node.js,express,MongoDB'\r\n            },\r\n            {\r\n                date:'2018.09~2018.10'\r\n               ,company:'한국소프트웨어인재개발원'\r\n               ,title:'TypeScript & Angualr 향상과정'\r\n               ,skill:'Angular,TypeScript,webPack,babel'\r\n            },\r\n            {\r\n                date:'2016.06~'\r\n               ,company:'주말 스터디'\r\n               ,title:'프론트엔드 스터디'\r\n               ,skill:'ES6,Node.js,React.js,SCSS,docker...'\r\n            }\r\n        ]\r\n    }\r\n\r\n","import React, { PureComponent } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport DraggableCore from 'react-draggable';\r\nimport styled from 'styled-components';\r\nimport className from 'classnames';\r\nimport * as actions from '../../actions';\r\nimport './subWindow.scss';\r\nimport {aboutMe,career,study} from '../submenulist/aboutMe';\r\n\r\nclass subWindow extends PureComponent{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            contentCode:'',\r\n            modalSizeClass: 'pop_maxsize',\r\n            modalSizeBoolean:false,\r\n        }\r\n    }\r\n\r\n    /*창 버튼 */\r\n    selected = (index) => {\r\n        if(this.closeYN !== 'Y')\r\n            this.props.folderSelected(index);\r\n        this.closeYN = '';\r\n    }\r\n    close = (index) => {\r\n        this.closeYN = 'Y';\r\n        this.props.folderClose(index);\r\n    }\r\n\r\n    /*스타일 */\r\n    Subtitle = styled.li`\r\n        padding:0.5rem 0 0.2rem;\r\n        span{\r\n            font-weight: bold;\r\n        }\r\n    `;\r\n\r\n    aboutMeContentDOM = {\r\n        AM : (\r\n            <div>\r\n                <div className=\"business_card\">\r\n                    <div className=\"card_name\">\r\n                        <span>{aboutMe.subMenu[0].name}</span>\r\n                    </div>\r\n                    <div className=\"card_birth_day\">\r\n                        <span>{aboutMe.subMenu[0].birthDay}</span>\r\n                    </div>\r\n                    <div className=\"card_school\">\r\n                        <span>{aboutMe.subMenu[0].school}</span>\r\n                    </div>\r\n                    <div className=\"card_text\">\r\n                        {aboutMe.subMenu[0].text}\r\n                    </div>\r\n                    <div className=\"card_logo_img\">\r\n                        <img src=\"./image/logo/HTML5_CSS_JavaScript.png\" alt=\"\"/>\r\n                        <img src=\"./image/logo/java.png\" alt=\"\"/>\r\n                        <img src=\"./image/logo/spring.png\" alt=\"\"/><br/>\r\n                        <img src=\"./image/logo/Oracle.png\" alt=\"\"/>\r\n                        <img src=\"./image/logo/nodejs.png\" alt=\"\"/><br/>\r\n                        <img src=\"./image/logo/react.png\" alt=\"\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n        ,CA : career.subMenu.map((key) => { \r\n                return  <div>\r\n                            <div className=\"history_box\">\r\n                                <div className=\"history_date\">\r\n                                    <span>{key.date}</span>\r\n                                </div>\r\n                                <div className=\"history_info\">\r\n                                    <div className=\"history_company\">\r\n                                        <span>회사</span><br/>{key.company}\r\n                                    </div>\r\n                                    <div className=\"history_part\">\r\n                                        <span>직종</span><br/>{key.part}\r\n                                    </div>\r\n                                    <div className=\"history_text\">\r\n                                        <span>업무</span><br/>{key.text}\r\n                                    </div>\r\n                                    <div className=\"history_skill\">\r\n                                        <span>기술</span><br/>{key.skill}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                })\r\n        ,ST :  study.subMenu.map((key) => { \r\n                return <div>\r\n                            <div className=\"study_box\">\r\n                                <div className=\"study_date\">\r\n                                    <span>{key.date}</span>\r\n                                </div>\r\n                                <div className=\"study_info\">\r\n                                    <div className=\"study_company\">\r\n                                        <span>교육</span><br/>{key.company}\r\n                                    </div>\r\n                                    <div className=\"study_title\">\r\n                                        <span>과정명</span><br/>{key.title}\r\n                                    </div>\r\n                                    <div className=\"study_skill\">\r\n                                        <span>기술</span><br/>{key.skill}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                })        \r\n    }\r\n\r\n    aboutMeContent = (code) => {\r\n        switch (code) {\r\n            case 'AM':\r\n                return this.aboutMeContentDOM.AM;\r\n            case 'CA':\r\n                return this.aboutMeContentDOM.CA;\r\n            \r\n            case 'ST':\r\n                return this.aboutMeContentDOM.ST;    \r\n                \r\n            default: \r\n                return this.aboutMeContentDOM.AM;\r\n        }\r\n    }\r\n\r\n    domContent = (name) => {\r\n        switch (name) {\r\n            case 'user-home':\r\n                console.log(\"aboutMe : \",aboutMe.subMenu);\r\n                return ( \r\n                        <div className=\"pop_content\">\r\n                            <div className=\"pop_preview\">\r\n                                <div className=\"menu-list\">\r\n                                    <ul>\r\n                                        <li className=\"user-menu-1\" onClick={() => this.setState({ ...this.state, contentCode: aboutMe.code}) } >\r\n                                            {aboutMe.name}\r\n                                        </li>\r\n                                        <li className=\"user-menu-2\" onClick={() => this.setState({ ...this.state, contentCode: career.code}) }>\r\n                                            {career.name}   \r\n                                        </li>\r\n                                        <li className=\"user-menu-3\" onClick={() => this.setState({ ...this.state, contentCode: study.code}) }>\r\n                                            {study.name}\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                                <div className=\"sub-content\">\r\n                                    {this.aboutMeContent(this.state.contentCode)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n        \r\n            default:\r\n                return ( <div className=\"pop_content\">\r\n                            <div className=\"\">\r\n                            <ul>\r\n                                <li></li>\r\n                                <li></li>\r\n                            </ul>\r\n                            </div>\r\n                            <div className=\"subready\">\r\n                                <span> 현재 준비 중입니다. </span>\r\n                            </div>\r\n                        </div>\r\n                        );\r\n        }\r\n    } \r\n\r\n    modalSizeChange = () => {\r\n        if(this.state.modalSizeClass === 'pop_maxsize_on')\r\n            this.setState({...this.state, modalSizeClass:'pop_maxsize'   ,modalSizeBoolean:false,});\r\n        else\r\n            this.setState({...this.state, modalSizeClass:'pop_maxsize_on',modalSizeBoolean:true ,});\r\n    }\r\n\r\n    createModal = () => {\r\n        return (\r\n              <DraggableCore  \r\n                handle=\".pop_head\" \r\n                disabled={this.state.modalSizeBoolean}\r\n                >\r\n                <div className={className(\"modal\",{\"max_modal\":this.state.modalSizeBoolean})}  \r\n                     onMouseDownCapture={ () => {this.selected(this.props.chosenFolder.index) } }\r\n                     style={{ zIndex: this.props.chosenFolder.z_index }}\r\n                    >\r\n                    <div className=\"pop_head\">    \r\n                        <div className=\"pop_folder_img\"> \r\n                            <img src={this.props.chosenFolder.imgUrl} alt=\"\" />\r\n                        </div>\r\n                        <div className=\"pop_title\">\r\n                            <span className={className({\"text_color_ddd\" : !this.props.chosenFolder.chosen})}>\r\n                                { this.props.chosenFolder.text }\r\n                            </span>\r\n                        </div>\r\n                        <div className=\"pop_mng\">\r\n                            <ul>\r\n                                <li>\r\n                                    <input type=\"button\" className=\"pop_minsize\"/>\r\n                                </li>\r\n                                <li onClick={() => {this.modalSizeChange()} }>\r\n                                    <input type=\"button\" className={this.state.modalSizeClass}/>\r\n                                </li>\r\n                                <li onClick={ () => { this.close(this.props.chosenFolder.index) } }>\r\n                                    <input type=\"button\" className=\"pop_close\" />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    {/*\r\n                    <nav>\r\n                        <div>\r\n                            <input className=\"pop_navi\" type=\"text\" alt=\"\" />\r\n                        </div>\r\n                        <div>\r\n                            <input className=\"pop_search\" type=\"text\" alt=\"\" />\r\n                        </div>\r\n                    </nav> \r\n                    */}\r\n                    { this.domContent(this.props.chosenFolder.name) }                    \r\n                </div>\r\n            </DraggableCore>\r\n            )\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <div>\r\n                {this.createModal()}\r\n            </div>\r\n        )   \r\n    }\r\n}\r\n\r\nconst mapToDispatch = (dispatch) =>({\r\n     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n});\r\n\r\nexport default connect(null,mapToDispatch)(subWindow);","import subWindow from './subWindow';\r\n\r\nexport default subWindow;","import React, { PureComponent, Fragment } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport folderCss from './folder.scss';\r\nimport classNames from 'classnames';\r\n// import * as actions from '../../actions';\r\nimport SubWindow from '../subwindow';\r\n\r\nconst scss = classNames.bind(folderCss);\r\nclass Folder extends PureComponent {\r\n\r\n    handleClickEvt = (value,index) => {\r\n        switch (value) {\r\n            case 'tistory':\r\n                return window.open('http://backback.tistory.com/');\r\n            case 'github':\r\n                return window.open('https://github.com/FactAttacker?tab=repositories/');    \r\n            default:\r\n                this.props.folderOpen(index, this.props.folderSelected(index));\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleShowFolder = () =>{\r\n        const folders = this.props.redux_folder.folder;\r\n        const liList = (data,index) => {\r\n            return(\r\n                <li key={'folder-list-'+index}>\r\n                    <div className={scss('folder')}\r\n                        onClick={()=>{this.handleClickEvt(data.name,index)}}>\r\n                        <img src={data.imgUrl} alt={data.text}/>\r\n                        <div className={scss('text')}>\r\n                            <span>{data.text}</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        const ulGroup = (rowData,index) =>(\r\n            <ul className=\"folder_row\" \r\n                key={'folder-group-'+index}> {rowData} </ul>\r\n        );\r\n            \r\n        let arrayList = [];\r\n        let rowData   = [];\r\n        let arrayNum  = folders.length;\r\n        for(let i =0 ; arrayNum > i ; i++){\r\n            if( i !==0 && i%3 === 0){ // 행 갯수 \r\n                // console.log(\" folder :\"+ folders[i].name);\r\n                arrayList.push(ulGroup(rowData,i));\r\n                rowData = [];\r\n            }\r\n            rowData.push(liList(folders[i],i)); \r\n            if(arrayNum === (i+1)) arrayList.push(ulGroup(rowData,(i+1)));\r\n        };\r\n        return arrayList;\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n            <Fragment>\r\n                <div id=\"content\">\r\n                    <div className=\"desktop_bg fade\" />\r\n                    <div className=\"desktop\">\r\n                        {this.handleShowFolder()}\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.props.redux_folder.folder.map( (element,idx) => {\r\n                        if( element.open ){\r\n                            return <SubWindow key={ 'window-'+idx } subIndex={idx} chosenFolder={ element }/>\r\n                        }\r\n                        return null;\r\n                    })}\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(Folder);","import folder from './folder.js'\r\n\r\nexport default folder;","import React, { PureComponent } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport taskbarCss from './taskbar.scss';\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst scss = classNames.bind(taskbarCss);\r\nlet clockSatus = 'FIRST';\r\nclass taskbar extends PureComponent{\r\n    \r\n    state = {\r\n          amPm:null,\r\n          currentHours:null,\r\n          currentMinute:null,\r\n          calendar:null,\r\n          clockSec:null,\r\n    }\r\n\r\n    // 자릿수 맞춰주기\r\n    addZeros = (num, digit) => { \r\n        let zero = '';\r\n        num = num.toString();\r\n        if ( num.length < digit ) \r\n            for (let i = 0; i < digit - num.length; i++) \r\n                zero += '0';\r\n        return zero + num;\r\n    }\r\n  \r\n    //setState가 componentDidMount후에 일어나기 때문에 setInterval 시간초를 맞추기 위한 처리\r\n    componentWillMount(){ //getderivedstatefromprops\r\n        this.handleChangeTime();\r\n    }\r\n    componentDidMount(){//최초 실행 한번 실행\r\n        setTimeout(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n    componentDidUpdate(){//1분마다 실행\r\n        setInterval(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n\r\n    handleChangeTime = () => {\r\n        let clockSec =0;\r\n        const currentDate = new Date(); // 현재시간\r\n        let calendar = currentDate.getFullYear() + \"-\" + this.addZeros((currentDate.getMonth()+1), 2) + \"-\" + this.addZeros(currentDate.getDate(),2); // 현재 날짜\r\n        let currentHours   = this.addZeros(currentDate.getHours(),2); \r\n        let currentMinute  = this.addZeros(currentDate.getMinutes(),2);\r\n\r\n        let currentSeconds = this.addZeros(currentDate.getSeconds(),2);\r\n        \r\n        let amPm = '오전'; //초기값 AM\r\n        if(currentHours >= 12){ //시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n            amPm = '오후';\r\n            currentHours = this.addZeros(currentHours - 12,2);\r\n        }\r\n        \r\n        if(amPm === '오전' && currentHours === 0) currentHours=12;\r\n\r\n        if(clockSatus != null){\r\n            clockSec = 60000 - (currentSeconds * 1000); \r\n            clockSatus = null;\r\n        }else clockSec = 60000;\r\n\r\n        // console.log('현재 시간 : '+currentHours+ ' : ' + currentMinute);\r\n        this.setState({\r\n            amPm,\r\n            currentHours,\r\n            currentMinute,\r\n            calendar,\r\n            clockSec:parseInt(clockSec),\r\n        })\r\n    };\r\n\r\n    quickIconClick = (name,index) => {\r\n        switch (name) {\r\n                case 'tistory':\r\n                    return window.open('http://backback.tistory.com/');\r\n                case 'github':\r\n                    return window.open('https://github.com/FactAttacker?tab=repositories/');    \r\n                default:\r\n                    this.props.folderOpen(index); \r\n                    this.props.folderSelected(index);\r\n                    break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"task_bar\">\r\n                    {/* <!-- 윈도우 시작 버튼 --> */}\r\n                    <input className={scss('start_bnt')} type=\"button\" />\r\n\r\n                    {/* 퀵 아이콘 */}\r\n                    <ul className=\"quick_icon\">\r\n                        {\r\n                            this.props.redux_folder.folder.map((key,i) => {\r\n                                return (<li key={\"quick-icon-\"+i} className={classNames({\"open_icon\":key.open,\"active_icon\": key.chosen})}\r\n                                            onClick={() => {this.quickIconClick(key.name,i)} }\r\n                                        > \r\n                                            <img src={key.imgUrl} alt=\"\"/>\r\n                                        </li>);\r\n                            })\r\n                        }\r\n                    </ul>\r\n\r\n                    {/* <!-- 스피커 --> */}\r\n                    <input className={scss('sound_on_btn')} type=\"button\" alt=\"사운드\" />\r\n\r\n                    {/* {날짜 시간} */}\r\n                    <div className={scss('date_box')}> \r\n                        <p className={scss('clock')}><span>{this.state.amPm + ' ' + Number(this.state.currentHours) + ':' + this.state.currentMinute }</span></p>\r\n                        <p className={scss('date')}><span>{this.state.calendar}</span></p>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return state;\r\n}\r\n\r\nexport default connect(mapStateToProps)(taskbar);\r\n","import taskbar from './taskbar';\r\n\r\nexport default taskbar;","import React, { PureComponent } from 'react';\r\nimport Folder from '../conponent/folder';\r\nimport Taskbar from '../conponent/taskbar';\r\nimport './App.scss'; \r\n\r\nimport * as actions from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass App extends PureComponent {\r\n  render() {\r\n    const {folderOpen,folderSelected} = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Folder\r\n          folderOpen     ={folderOpen}         \r\n          folderSelected ={folderSelected}         \r\n          />\r\n        <Taskbar\r\n          folderOpen     ={folderOpen}         \r\n          folderSelected ={folderSelected}         \r\n          // folderClose    ={folderClose}         \r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapToDispatch = (dispatch) =>({\r\n     folderOpen    : (index) => dispatch(actions.folderOpen(index)),\r\n     folderSelected: (index) => dispatch(actions.folderSelected(index)),\r\n     folderClose   : (index) => dispatch(actions.folderClose(index)),\r\n});\r\n\r\nexport default connect(null, mapToDispatch)(App);","import { combineReducers } from 'redux';\r\nimport Reducer_folder from './reducer_folder';\r\nimport * as types from '../actions/actionType';\r\n\r\nconst root_reducer = {\r\n    folder : Reducer_folder,\r\n} \r\n\r\nconst array = [];\r\nfunction redux_folder (state = root_reducer, action) {\r\n    const {folder} = state; \r\n\r\n    switch(action.type){\r\n        case types.FOLDER_OPEN:\r\n            return { folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:true}\r\n                else\r\n                    return {...key}\r\n                })};\r\n        \r\n        case types.FOLDER_CLOSE: \r\n            return {folder : folder.map( (key,i) => {\r\n                if(i === action.index)\r\n                    return {...key, open:false,chosen:false}\r\n                else\r\n                    return {...key}\r\n                })};\r\n\r\n        case types.FOLDER_SELECTED: \r\n            const idx = array.indexOf(action.index);\r\n            if(idx > -1){\r\n                array.splice(idx, 1);\r\n            }\r\n            return {folder : folder.map( (key,i) => {\r\n                if(i === action.index){\r\n                    array.push(i);\r\n                    return {...key, open:true, z_index: array.indexOf(key.index)+1 ,chosen:true}\r\n                }else\r\n                    return {...key, z_index: array.indexOf(key.index)+1, chosen:false}\r\n                })};\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default combineReducers({redux_folder});","export default [\r\n            {name:'github'    ,index:0, text:'Github'  ,imgUrl:'./image/github.png',     open: false    ,z_index : 0 , chosen:false},\r\n            {name:'user-home' ,index:1, text:'About Me',imgUrl:'./image/user-home.png',  open: false    ,z_index : 0 , chosen:false},\r\n            {name:'works'     ,index:2, text:'Works'   ,imgUrl:'./image/computer.png',   open: false    ,z_index : 0 , chosen:false},\r\n            {name:'tistory'   ,index:3, text:'Tistory' ,imgUrl:'./image/logomark.svg',   open: false    ,z_index : 0 , chosen:false},\r\n            {name:'user-trash',index:4, text:'휴지통'   ,imgUrl:'./image/user-trash.png', open: false    ,z_index : 0 , chosen:false}\r\n        ]\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\n// import reduxActions from './redux-actions';\r\nimport reduxActions from './reducer';\r\n\r\nconst logger = createLogger();\r\nexport default createStore(reduxActions,applyMiddleware(logger));","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './conents/App';\r\nimport './reset.scss';\r\n\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n, document.getElementById('root'));\r\n"],"sourceRoot":""}