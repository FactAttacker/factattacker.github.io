{"version":3,"sources":["conponent/folder/folder.js","conponent/folder/index.js","conponent/taskbar/taskbar.js","conponent/taskbar/index.js","conents/App.js","redux-actions/Redux-actions.js","redux-actions/index.js","store.js","index.js"],"names":["scss","classNames","bind","folderCss","folder","state","name","index","text","imgUrl","handleClickEvt","value","console","log","window","open","handleShowFolder","folders","_this","liList","data","react_default","a","createElement","key","className","onClick","src","alt","ulGroup","rowData","arrayList","arrayNum","length","i","push","id","this","PureComponent","taskbarCss","clockSatus","taskbar","amPm","currentHours","currentMinute","calendar","clockSec","addZeros","num","digit","zero","toString","handleChangeTime","currentDate","Date","getFullYear","getMonth","getDate","getHours","getMinutes","currentSeconds","getSeconds","setState","parseInt","setTimeout","setInterval","type","Number","App","conponent_folder","conponent_taskbar","Component","handleActions","createAction","_handleActions","Object","defineProperty","action","combineReducers","reduxActions","logger","createLogger","createStore","applyMiddleware","ReactDOM","render","es","store","src_conents_App","document","getElementById"],"mappings":"kUAIMA,EAAOC,IAAWC,KAAKC,KACRC,6MAEjBC,MAAM,CACFD,OAAS,CACL,CAACE,KAAK,SAAaC,MAAM,EAAGC,KAAK,SAAWC,OAAO,sBACnD,CAACH,KAAK,YAAaC,MAAM,EAAGC,KAAK,WAAWC,OAAO,yBACnD,CAACH,KAAK,QAAaC,MAAM,EAAGC,KAAK,QAAWC,OAAO,wBACnD,CAACH,KAAK,UAAaC,MAAM,EAAGC,KAAK,UAAWC,OAAO,wBACnD,CAACH,KAAK,aAAaC,MAAM,EAAGC,KAAK,qBAASC,OAAO,8BAIzDC,eAAiB,SAACC,GAEd,OADAC,QAAQC,IAAIF,GACJA,GACJ,IAAK,UAED,OADAC,QAAQC,IAAIF,GACLG,OAAOC,KAAK,gCACvB,IAAK,SACD,OAAOD,OAAOC,KAAK,yDAM/BC,iBAAmB,WA2Bf,IA1BA,IAAMC,EAAUC,EAAKb,MAAMD,OACrBe,EAAS,SAACC,EAAKb,GACjB,OACIc,EAAAC,EAAAC,cAAA,MACIC,IAAK,eAAejB,GAEpBc,EAAAC,EAAAC,cAAA,OAAKE,UAAWzB,EAAK,UACjB0B,QAAS,WAAKR,EAAKR,eAAeU,EAAKd,QAEvCe,EAAAC,EAAAC,cAAA,OAAKI,IAAKP,EAAKX,OAAQmB,IAAKR,EAAKZ,OACjCa,EAAAC,EAAAC,cAAA,OAAKE,UAAWzB,EAAK,SACjBqB,EAAAC,EAAAC,cAAA,YAAOH,EAAKZ,UAO1BqB,EAAU,SAACC,EAAQvB,GAAT,OACZc,EAAAC,EAAAC,cAAA,MAAIE,UAAU,aACVD,IAAK,gBAAgBjB,GADzB,IACkCuB,EADlC,MAIAC,EAAY,GACZD,EAAY,GACZE,EAAYf,EAAQgB,OAChBC,EAAG,EAAIF,EAAWE,EAAIA,IAEjB,IAALA,GAAUA,EAAE,IAAM,IAClBtB,QAAQC,IAAI,YAAaI,EAAQiB,GAAG5B,MACpCyB,EAAUI,KAAKN,EAAQC,EAAQI,IAC/BJ,EAAU,IAGdA,EAAQK,KAAKhB,EAAOF,EAAQiB,GAAGA,IAE5BF,IAAcE,EAAE,GAAIH,EAAUI,KAAKN,EAAQC,EAASI,EAAE,IAG7D,OAAOH,2EAIP,OACIV,EAAAC,EAAAC,cAAA,OAAKa,GAAG,WACJf,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBACfJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,WACVY,KAAKrB,4BAzEUsB,iBCHpC1B,QAAQC,IAAI,YACGT,2BCCTJ,EAAOC,IAAWC,KAAKqC,KACzBC,EAAa,QCHFC,6MDKXpC,MAAQ,CACFqC,KAAK,KACLC,aAAa,KACbC,cAAc,KACdC,SAAS,KACTC,SAAS,QAIfC,SAAW,SAACC,EAAKC,GACb,IAAIC,EAAO,GAEX,IADAF,EAAMA,EAAIG,YACDlB,OAASgB,EACd,IAAK,IAAIf,EAAI,EAAGA,EAAIe,EAAQD,EAAIf,OAAQC,IACpCgB,GAAQ,IAChB,OAAOA,EAAOF,KAclBI,iBAAmB,WACf,IAAIN,EAAU,EACRO,EAAc,IAAIC,KACpBT,EAAWQ,EAAYE,cAAgB,IAAMrC,EAAK6B,SAAUM,EAAYG,WAAW,EAAI,GAAK,IAAMtC,EAAK6B,SAASM,EAAYI,UAAU,GACtId,EAAiBzB,EAAK6B,SAASM,EAAYK,WAAW,GACtDd,EAAiB1B,EAAK6B,SAASM,EAAYM,aAAa,GAExDC,EAAiB1C,EAAK6B,SAASM,EAAYQ,aAAa,GAExDnB,EAAO,eACRC,GAAgB,KACfD,EAAO,eACPC,EAAezB,EAAK6B,SAASJ,EAAe,GAAG,IAEvC,iBAATD,GAAkC,IAAjBC,IAAoBA,EAAa,IAEpC,MAAdH,GACCM,EAAW,IAA0B,IAAjBc,EACpBpB,EAAa,MACXM,EAAW,IAEjBlC,QAAQC,IAAI,+BAAW8B,EAAc,MAAQC,GAC7C1B,EAAK4C,SAAS,CACVpB,OACAC,eACAC,gBACAC,WACAC,SAASiB,SAASjB,0FApCtBT,KAAKe,+DAGLY,WAAW3B,KAAKe,iBAAkBf,KAAKhC,MAAMyC,uDAG7CmB,YAAY5B,KAAKe,iBAAkBf,KAAKhC,MAAMyC,2CAmC9C,OACIzB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YAEXJ,EAAAC,EAAAC,cAAA,SAAOE,UAAWzB,EAAK,aAAckE,KAAK,WAG1C7C,EAAAC,EAAAC,cAAA,SAAOE,UAAWzB,EAAK,gBAAiBkE,KAAK,SAAStC,IAAI,uBAG1DP,EAAAC,EAAAC,cAAA,OAAKE,UAAWzB,EAAK,aACjBqB,EAAAC,EAAAC,cAAA,KAAGE,UAAWzB,EAAK,UAAUqB,EAAAC,EAAAC,cAAA,YAAOc,KAAKhC,MAAMqC,KAAO,IAAMyB,OAAO9B,KAAKhC,MAAMsC,cAAgB,IAAMN,KAAKhC,MAAMuC,gBAC/GvB,EAAAC,EAAAC,cAAA,KAAGE,UAAWzB,EAAK,SAASqB,EAAAC,EAAAC,cAAA,YAAOc,KAAKhC,MAAMwC,qBA1EjCP,iBEStB8B,0LARX,OACE/C,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAAC8C,EAAD,MACAhD,EAAAC,EAAAC,cAAC+C,EAAD,cALUC,6DCGHC,GAHUC,YAHP,aAIOA,YAHP,aAKHD,aAAaE,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,EANV,YAOD,SAACrE,EAAOwE,GAAR,OAAmBxE,EAAQ,IADhBsE,OAAAC,EAAA,EAAAD,CAAAD,EALV,YAOD,SAACrE,EAAOwE,GAAR,OAAmBxE,EAAQ,IAFhBqE,GAGzB,ICRYI,cAAgB,CAC3BC,iBCAEC,EAASC,yBACAC,cAAYH,EAAaI,YAAgBH,UCExDI,IAASC,OACLhE,EAAAC,EAAAC,cAAC+D,EAAA,EAAD,CAAUC,MAAOA,GACblE,EAAAC,EAAAC,cAACiE,EAAD,OAENC,SAASC,eAAe","file":"static/js/main.a5140a11.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport folderCss from './folder.scss';\r\nimport classNames from 'classnames'\r\n\r\nconst scss = classNames.bind(folderCss);\r\nexport default class folder extends PureComponent {\r\n    \r\n    state={\r\n        folder : [\r\n            {name:'github'    ,index:0, text:'Github'  ,imgUrl:'./image/github.png'},\r\n            {name:'user-home' ,index:1, text:'About Me',imgUrl:'./image/user-home.png'},\r\n            {name:'works'     ,index:2, text:'Works'   ,imgUrl:'./image/computer.png'},\r\n            {name:'tistory'   ,index:3, text:'Tistory' ,imgUrl:'./image/logomark.svg'},\r\n            {name:'user-trash',index:4, text:'휴지통'   ,imgUrl:'./image/user-trash.png'},\r\n        ],\r\n    } \r\n\r\n    handleClickEvt = (value) => {\r\n        console.log(value);\r\n        switch (value) {\r\n            case 'tistory':\r\n                console.log(value); \r\n                return window.open('http://backback.tistory.com/');\r\n            case 'github':\r\n                return window.open('https://github.com/FactAttacker?tab=repositories/');    \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleShowFolder = () =>{\r\n        const folders = this.state.folder;\r\n        const liList = (data,index) => {\r\n            return(\r\n                <li \r\n                    key={'folder-list-'+index}\r\n                >\r\n                    <div className={scss('folder')}\r\n                        onClick={()=>{this.handleClickEvt(data.name)}}\r\n                    >\r\n                        <img src={data.imgUrl} alt={data.text}/>\r\n                        <div className={scss('text')}>\r\n                            <span>{data.text}</span>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            );\r\n        }\r\n\r\n        const ulGroup = (rowData,index) =>(\r\n            <ul className=\"folder_row\" \r\n                key={'folder-group-'+index}> {rowData} </ul>\r\n        );\r\n            \r\n        let arrayList = [];\r\n        let rowData   = [];\r\n        let arrayNum  = folders.length;\r\n        for(let i =0 ; arrayNum > i ; i++){\r\n            \r\n            if( i !==0 && i%3 === 0){ // 행 갯수 \r\n                console.log(\" folder :\"+ folders[i].name);\r\n                arrayList.push(ulGroup(rowData,i));\r\n                rowData = [];\r\n            }\r\n            \r\n            rowData.push(liList(folders[i],i)); \r\n            \r\n            if(arrayNum === (i+1)) arrayList.push(ulGroup(rowData,(i+1)));\r\n        };\r\n        \r\n        return arrayList;\r\n    }\r\n    \r\n    render(){\r\n        return (\r\n            <div id=\"content\">\r\n                <div className=\"desktop_bg fade\" />\r\n                <div className=\"desktop\">\r\n                    {this.handleShowFolder()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import folder from './folder.js'\r\n\r\nconsole.log('index.js');\r\nexport default folder;","import React, { PureComponent } from 'react'\r\nimport taskbarCss from './taskbar.scss';\r\nimport classNames from 'classnames'\r\n\r\nconst scss = classNames.bind(taskbarCss);\r\nlet clockSatus = 'FIRST';\r\nexport default class taskbar extends PureComponent{\r\n    state = {\r\n          amPm:null,\r\n          currentHours:null,\r\n          currentMinute:null,\r\n          calendar:null,\r\n          clockSec:null,\r\n    }\r\n\r\n    // 자릿수 맞춰주기\r\n    addZeros = (num, digit) => { \r\n        let zero = '';\r\n        num = num.toString();\r\n        if ( num.length < digit ) \r\n            for (let i = 0; i < digit - num.length; i++) \r\n                zero += '0';\r\n        return zero + num;\r\n    }\r\n  \r\n    //setState가 componentDidMount후에 일어나기 때문에 setInterval 시간초를 맞추기 위한 처리\r\n    componentWillMount(){\r\n        this.handleChangeTime();\r\n    }\r\n    componentDidMount(){//최초 실행 한번 실행\r\n        setTimeout(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n    componentDidUpdate(){//1분마다 실행\r\n        setInterval(this.handleChangeTime, this.state.clockSec);\r\n    }\r\n\r\n    handleChangeTime = () => {\r\n        let clockSec =0;\r\n        const currentDate = new Date(); // 현재시간\r\n        let calendar = currentDate.getFullYear() + \"-\" + this.addZeros((currentDate.getMonth()+1), 2) + \"-\" + this.addZeros(currentDate.getDate(),2); // 현재 날짜\r\n        let currentHours   = this.addZeros(currentDate.getHours(),2); \r\n        let currentMinute  = this.addZeros(currentDate.getMinutes(),2);\r\n\r\n        let currentSeconds = this.addZeros(currentDate.getSeconds(),2);\r\n        \r\n        let amPm = '오전'; //초기값 AM\r\n        if(currentHours >= 12){ //시간이 12보다 클 때 PM으로 세팅, 12를 빼줌\r\n            amPm = '오후';\r\n            currentHours = this.addZeros(currentHours - 12,2);\r\n        }\r\n        if(amPm === '오전' && currentHours === 0) currentHours=12;\r\n\r\n        if(clockSatus != null){\r\n            clockSec = 60000 - (currentSeconds * 1000); \r\n            clockSatus = null;\r\n        }else clockSec = 60000;\r\n\r\n        console.log('현재 시간 : '+currentHours+ ' : ' + currentMinute);\r\n        this.setState({\r\n            amPm,\r\n            currentHours,\r\n            currentMinute,\r\n            calendar,\r\n            clockSec:parseInt(clockSec),\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"footer\">\r\n                <div className=\"task_bar\">\r\n                    {/* <!-- 윈도우 시작 버튼 --> */}\r\n                    <input className={scss('start_bnt')} type=\"button\" />\r\n\r\n                    {/* <!-- 스피커 --> */}\r\n                    <input className={scss('sound_on_btn')} type=\"button\" alt=\"사운드\" />\r\n                    \r\n                    {/* {날짜 시간} */}\r\n                    <div className={scss('date_box')}> \r\n                        <p className={scss('clock')}><span>{this.state.amPm + ' ' + Number(this.state.currentHours) + ':' + this.state.currentMinute }</span></p>\r\n                        <p className={scss('date')}><span>{this.state.calendar}</span></p>\r\n                    </div>\r\n                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import taskbar from './taskbar';\r\n\r\nexport default taskbar;","import React, { Component } from 'react';\r\nimport Folder from '../conponent/folder';\r\nimport Taskbar from '../conponent/taskbar';\r\nimport './App.scss'; \r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Folder/>\r\n        <Taskbar/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;","import { handleActions, createAction } from 'redux-actions';\r\n\r\nconst INCREMENT = 'INCREMENT';\r\nconst DECREMENT = 'DECREMENT';\r\n\r\nexport const increment = createAction(INCREMENT);\r\nexport const decrement = createAction(DECREMENT);\r\n\r\nexport default handleActions({\r\n    [INCREMENT]: (state, action) => state + 1,\r\n    [DECREMENT]: (state, action) => state - 1\r\n}, 0);","import { combineReducers } from 'redux';\r\nimport reduxActions from './Redux-actions';\r\n\r\nexport default combineReducers({\r\n    reduxActions\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { createLogger } from 'redux-logger';\r\nimport reduxActions from './redux-actions';\r\n\r\nconst logger = createLogger();\r\nexport default createStore(reduxActions,applyMiddleware(logger));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './conents/App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './reset.scss';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}